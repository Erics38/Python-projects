name: Direct Deploy

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - apply
        - destroy

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.6.0

jobs:
  terraform-apply:
    name: üöÄ Deploy Infrastructure
    runs-on: ubuntu-latest
    if: github.event.inputs.terraform_action == 'apply'
    environment: demo
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: docker-hello-world/infrastructure
      run: terraform init

    - name: Terraform Apply
      working-directory: docker-hello-world/infrastructure
      run: |
        terraform apply -auto-approve \
          -var-file="environments/demo.tfvars"

    - name: Get Application URL
      working-directory: docker-hello-world/infrastructure
      run: |
        echo "üåê Application URL:"
        terraform output application_url

  terraform-destroy:
    name: üóëÔ∏è Destroy Infrastructure
    runs-on: ubuntu-latest
    if: github.event.inputs.terraform_action == 'destroy'
    environment: demo-destroy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: docker-hello-world/infrastructure
      run: terraform init

    - name: Terraform Destroy
      working-directory: docker-hello-world/infrastructure
      run: |
        terraform destroy -auto-approve \
          -var-file="environments/demo.tfvars"